// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 32-bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "12/27/2016 16:44:17"

// 
// Device: Altera EP1C6Q240C8 Package PQFP240
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module fulladder (
	Cout,
	A,
	B,
	Cin,
	Sum);
output 	Cout;
input 	A;
input 	B;
input 	Cin;
output 	Sum;

// Design Ports Information
// Cout	=>  Location: PIN_18,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// Sum	=>  Location: PIN_16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// B	=>  Location: PIN_20,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// Cin	=>  Location: PIN_1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// A	=>  Location: PIN_17,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("fulladder_v.sdo");
// synopsys translate_on

wire \A~combout ;
wire \B~combout ;
wire \Cin~combout ;
wire \inst3~0_combout ;
wire \inst2|inst2~0_combout ;


// Location: PIN_17,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
cyclone_io \A~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\A~combout ),
	.regout(),
	.padio(A));
// synopsys translate_off
defparam \A~I .input_async_reset = "none";
defparam \A~I .input_power_up = "low";
defparam \A~I .input_register_mode = "none";
defparam \A~I .input_sync_reset = "none";
defparam \A~I .oe_async_reset = "none";
defparam \A~I .oe_power_up = "low";
defparam \A~I .oe_register_mode = "none";
defparam \A~I .oe_sync_reset = "none";
defparam \A~I .operation_mode = "input";
defparam \A~I .output_async_reset = "none";
defparam \A~I .output_power_up = "low";
defparam \A~I .output_register_mode = "none";
defparam \A~I .output_sync_reset = "none";
// synopsys translate_on

// Location: PIN_20,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
cyclone_io \B~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\B~combout ),
	.regout(),
	.padio(B));
// synopsys translate_off
defparam \B~I .input_async_reset = "none";
defparam \B~I .input_power_up = "low";
defparam \B~I .input_register_mode = "none";
defparam \B~I .input_sync_reset = "none";
defparam \B~I .oe_async_reset = "none";
defparam \B~I .oe_power_up = "low";
defparam \B~I .oe_register_mode = "none";
defparam \B~I .oe_sync_reset = "none";
defparam \B~I .operation_mode = "input";
defparam \B~I .output_async_reset = "none";
defparam \B~I .output_power_up = "low";
defparam \B~I .output_register_mode = "none";
defparam \B~I .output_sync_reset = "none";
// synopsys translate_on

// Location: PIN_1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
cyclone_io \Cin~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Cin~combout ),
	.regout(),
	.padio(Cin));
// synopsys translate_off
defparam \Cin~I .input_async_reset = "none";
defparam \Cin~I .input_power_up = "low";
defparam \Cin~I .input_register_mode = "none";
defparam \Cin~I .input_sync_reset = "none";
defparam \Cin~I .oe_async_reset = "none";
defparam \Cin~I .oe_power_up = "low";
defparam \Cin~I .oe_register_mode = "none";
defparam \Cin~I .oe_sync_reset = "none";
defparam \Cin~I .operation_mode = "input";
defparam \Cin~I .output_async_reset = "none";
defparam \Cin~I .output_power_up = "low";
defparam \Cin~I .output_register_mode = "none";
defparam \Cin~I .output_sync_reset = "none";
// synopsys translate_on

// Location: LC_X1_Y15_N4
cyclone_lcell \inst3~0 (
// Equation(s):
// \inst3~0_combout  = ((\A~combout  & ((\B~combout ) # (\Cin~combout ))) # (!\A~combout  & (\B~combout  & \Cin~combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\A~combout ),
	.datac(\B~combout ),
	.datad(\Cin~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\inst3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \inst3~0 .lut_mask = "fcc0";
defparam \inst3~0 .operation_mode = "normal";
defparam \inst3~0 .output_mode = "comb_only";
defparam \inst3~0 .register_cascade_mode = "off";
defparam \inst3~0 .sum_lutc_input = "datac";
defparam \inst3~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y15_N2
cyclone_lcell \inst2|inst2~0 (
// Equation(s):
// \inst2|inst2~0_combout  = (\A~combout  $ (\B~combout  $ (\Cin~combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\A~combout ),
	.datac(\B~combout ),
	.datad(\Cin~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\inst2|inst2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \inst2|inst2~0 .lut_mask = "c33c";
defparam \inst2|inst2~0 .operation_mode = "normal";
defparam \inst2|inst2~0 .output_mode = "comb_only";
defparam \inst2|inst2~0 .register_cascade_mode = "off";
defparam \inst2|inst2~0 .sum_lutc_input = "datac";
defparam \inst2|inst2~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_18,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cyclone_io \Cout~I (
	.datain(\inst3~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.padio(Cout));
// synopsys translate_off
defparam \Cout~I .input_async_reset = "none";
defparam \Cout~I .input_power_up = "low";
defparam \Cout~I .input_register_mode = "none";
defparam \Cout~I .input_sync_reset = "none";
defparam \Cout~I .oe_async_reset = "none";
defparam \Cout~I .oe_power_up = "low";
defparam \Cout~I .oe_register_mode = "none";
defparam \Cout~I .oe_sync_reset = "none";
defparam \Cout~I .operation_mode = "output";
defparam \Cout~I .output_async_reset = "none";
defparam \Cout~I .output_power_up = "low";
defparam \Cout~I .output_register_mode = "none";
defparam \Cout~I .output_sync_reset = "none";
// synopsys translate_on

// Location: PIN_16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cyclone_io \Sum~I (
	.datain(\inst2|inst2~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.padio(Sum));
// synopsys translate_off
defparam \Sum~I .input_async_reset = "none";
defparam \Sum~I .input_power_up = "low";
defparam \Sum~I .input_register_mode = "none";
defparam \Sum~I .input_sync_reset = "none";
defparam \Sum~I .oe_async_reset = "none";
defparam \Sum~I .oe_power_up = "low";
defparam \Sum~I .oe_register_mode = "none";
defparam \Sum~I .oe_sync_reset = "none";
defparam \Sum~I .operation_mode = "output";
defparam \Sum~I .output_async_reset = "none";
defparam \Sum~I .output_power_up = "low";
defparam \Sum~I .output_register_mode = "none";
defparam \Sum~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
